/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package p2p_cs535;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author zhichengfu
 */
public class Init_Setting extends javax.swing.JFrame {

    /**
     * Creates new form Init_Setting
     */
    Client client;
    public Init_Setting(Client client) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.client=client;
        this.setDefaultCloseOperation(0);
        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                // do whatever else
                dispose();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        serverPort = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        setServerButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        clientPort = new javax.swing.JTextField();
        setClientButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Run As Server--Setting: ");

        jLabel2.setText("Port:");

        setServerButton.setText("Set As Server");
        setServerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setServerButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Run As Client--Setting: ");

        jLabel4.setText("Port:");

        setClientButton.setText("Set As Client");
        setClientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setClientButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(serverPort, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clientPort, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(setServerButton)
                    .addComponent(setClientButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serverPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(setServerButton))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(clientPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setClientButton))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setServerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setServerButtonActionPerformed
        // TODO add your handling code here:
        Init_Setting temp=this;
        int port=Integer.parseInt(this.serverPort.getText());
        new Thread() {
            public void run() {
                try {
                    Server server = new Server(temp,port);
                    //temp.showServerState(true);
                } catch (IOException ex) {
                    temp.showServerState(false);                   
                }
            }
        }.start();
    }//GEN-LAST:event_setServerButtonActionPerformed

    private void setClientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setClientButtonActionPerformed
        // TODO add your handling code here:
        Init_Setting temp=this;
        int port=Integer.parseInt(this.clientPort.getText());
        new Thread() {
            public void run() {
                try {
                    client.initResponse(temp, port);
                    //temp.showServerState(true);
                } catch (IOException ex) {
                    temp.showServerState(false);                   
                }
            }
        }.start();
    }//GEN-LAST:event_setClientButtonActionPerformed

    
    public void showServerState(boolean flag)
    {
        if(flag)
        {
            JOptionPane.showMessageDialog(null, "Server Set Successfully");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Server Set Failed!");
        }
    }
    
    public void showClientState(boolean flag)
    {
        if(flag)
        {
            JOptionPane.showMessageDialog(null, "Client Set Successfully");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Client Set Failed!");
        }
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Init_Setting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Init_Setting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Init_Setting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Init_Setting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Init_Setting().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField clientPort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField serverPort;
    private javax.swing.JButton setClientButton;
    private javax.swing.JButton setServerButton;
    // End of variables declaration//GEN-END:variables

    void showServerPortState() {
       JOptionPane.showMessageDialog(null, "This port is not avaliable!");//To change body of generated methods, choose Tools | Templates.
    }
    
    public void showClientPortState() {
       JOptionPane.showMessageDialog(null, "This port is not avaliable!");//To change body of generated methods, choose Tools | Templates.
    }
}
